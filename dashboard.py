"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–∞—à–±–æ—Ä–¥–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–≤–∏–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
"""
import streamlit as st
import pandas as pd
from charts import display_movement_status_chart
from db_connection import get_sqlalchemy_engine
from SQL.queries import get_current_status_query
from dotenv import load_dotenv
from filters import display_control_params
from datetime import datetime, timezone

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Fleet Status Dashboard",
    page_icon="üöó",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://github.com/streamlit/streamlit/issues',
        'Report a bug': 'https://github.com/streamlit/streamlit/issues/new',
        'About': 'Fleet Status Dashboard - Real-time vehicle monitoring'
    }
)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data(ttl=300)  # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ 5 –º–∏–Ω—É—Ç
def load_current_status(params):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —É—á–µ—Ç–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    """
    query = get_current_status_query(params)
    return pd.read_sql(query, get_sqlalchemy_engine())

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("Fleet Status Dashboard")

try:
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    params = display_control_params()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Update
    if params['update_button']:
        df = load_current_status(params)
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric("Total Devices", len(df['device_id'].unique()))
        with col2:
            active_count = (df['connection_status'] == 'active').sum()
            st.metric("Active Devices", active_count)
        with col3:
            offline_count = (df['connection_status'] == 'offline').sum()
            st.metric("Offline Devices", offline_count)

        # –ì—Ä–∞—Ñ–∏–∫–∏ –≤ –¥–≤—É—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("Movement Status")
            display_movement_status_chart()
        
        with col2:
            st.subheader("Connection Status")
            # TODO: –î–æ–±–∞–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

        # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
        st.subheader("Current Status")
        display_df = df[[
            'device_id',
            'object_label',
            'first_name',
            'last_name',
            'speed',
            'moving_status',
            'connection_status',
            'last_connect_formatted'
        ]].sort_values('last_connect_formatted')
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        display_df.columns = [
            'Device ID',
            'Vehicle',
            'First Name',
            'Last Name',
            'Speed (km/h)',
            'Movement Status',
            'Connection Status',
            'Last Connection'
        ]
        
        st.dataframe(display_df, use_container_width=True)
    else:
        st.info("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ 'Update' –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")

except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
    st.error("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.") 